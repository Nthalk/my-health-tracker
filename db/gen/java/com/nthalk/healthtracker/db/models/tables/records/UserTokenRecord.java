/*
 * This file is generated by jOOQ.
 */
package com.nthalk.healthtracker.db.models.tables.records;


import com.nthalk.healthtracker.db.models.tables.UserToken;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserTokenRecord extends TableRecordImpl<UserTokenRecord> implements Record2<Long, String> {

    private static final long serialVersionUID = 1590365261;

    /**
     * Setter for <code>user_token.user_id</code>.
     */
    public void setUserId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>user_token.user_id</code>.
     */
    public Long getUserId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>user_token.token</code>.
     */
    public void setToken(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>user_token.token</code>.
     */
    public String getToken() {
        return (String) get(1);
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<Long, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<Long, String> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return UserToken.USER_TOKEN.USER_ID;
    }

    @Override
    public Field<String> field2() {
        return UserToken.USER_TOKEN.TOKEN;
    }

    @Override
    public Long component1() {
        return getUserId();
    }

    @Override
    public String component2() {
        return getToken();
    }

    @Override
    public Long value1() {
        return getUserId();
    }

    @Override
    public String value2() {
        return getToken();
    }

    @Override
    public UserTokenRecord value1(Long value) {
        setUserId(value);
        return this;
    }

    @Override
    public UserTokenRecord value2(String value) {
        setToken(value);
        return this;
    }

    @Override
    public UserTokenRecord values(Long value1, String value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UserTokenRecord
     */
    public UserTokenRecord() {
        super(UserToken.USER_TOKEN);
    }

    /**
     * Create a detached, initialised UserTokenRecord
     */
    public UserTokenRecord(Long userId, String token) {
        super(UserToken.USER_TOKEN);

        set(0, userId);
        set(1, token);
    }
}
